"""
На физкультуре происходит разбиение по двум командам.
Ребята выстроены в шеренгу, у каждого из них есть свой рост
Разбиение по командам произойдет по принципу «четный-нечетный» —
все школьники с четным ростом отправляются в одну команду, а нечетные — в другую.
В отличие от привычного урока, ребята не выстроились по росту.
Вместо привычного порядка они встали случайно.
Теперь физрук Яша смотрит на шеренгу и думает —
может ли ровно одна пара учеников поменяться местами так,
чтобы команды оказались такими же, как и по принципу «первый-второй».
Иначе говоря, он хочет получить такой порядок,
при котором все ученики с четным ростом стоят на четных позициях,
а с нечетным — на нечетных.
Помогите Яше найти нужную замену.

Формат входных данных
В первой строке находится число n — количество учеников в шеренге.
В следующей строке находится n натуральных чисел  — рост учеников.

Формат выходных данных
В единственной строке выведите i и j — номера элементов,
которые нужно поменять местами, чтобы добиться заданного условия.
Если ответов несколько — разрешается вывести любой.
Если не существует способа поменять два элемента местами — выведите -1 -1.
"""


def get_swap_elements(
    number_of_students: int, students_hight: list[int]
) -> list[int, int]:
    diff_parity = []
    for i, el in enumerate(students_hight):
        if (i + 1) % 2 != el % 2:
            diff_parity.append(i)

    if len(diff_parity) == 2:
        return [diff_parity[0] + 1, diff_parity[1] + 1]

    if len(diff_parity) > 2:
        return [-1, -1]

    if not diff_parity and number_of_students <= 2:
        return [-1, -1]

    return [1, 3]


if __name__ == "__main__":
    number_of_students = int(input())
    students_hight = list(map(int, input().split()))
    print(get_swap_elements(number_of_students, students_hight))
